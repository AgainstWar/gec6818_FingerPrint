DROP DATABASE IF EXISTS `FingerPrintDB`;
CREATE DATABASE `FingerPrintDB`;
USE `FingerPrintDB`;

CREATE TABLE IF NOT EXISTS USERS
(
    UID        INT PRIMARY KEY UNIQUE NOT NULL,
    NAME       VARCHAR(100) NOT NULL,
    PWD_HASH   VARCHAR(255),
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Fingerprints
(
    FINGERPRINT_ID   INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID          INT  NOT NULL,
    CREATED_AT       DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(UID)
);

CREATE TABLE IF NOT EXISTS WorkTime
(
    WORKTIME_ID    INT AUTO_INCREMENT PRIMARY KEY,
    CHECK_IN_TIME  TIME NOT NULL,
    CHECK_OUT_TIME TIME NOT NULL
);

CREATE TABLE IF NOT EXISTS Attendance
(
    ATTENDANCE_ID  INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID        INT      NOT NULL,
    CHECK_IN_TIME  DATETIME NOT NULL,
    CHECK_OUT_TIME DATETIME,
    IS_LATE        BOOLEAN DEFAULT FALSE,
    IS_EARLY       BOOLEAN DEFAULT FALSE,
    IS_ABSENT      BOOLEAN DEFAULT FALSE,
    WORKTIME_ID    INT      NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (UID) ON DELETE CASCADE,
    FOREIGN KEY (WORKTIME_ID) REFERENCES WorkTime (WORKTIME_ID) ON DELETE CASCADE
);

DELIMITER / / CREATE TRIGGER check_attendance
AFTER
INSERT
    ON Attendance FOR EACH ROW BEGIN DECLARE work_check_in TIME;

DECLARE work_check_out TIME;

-- 获取工作时间
SELECT
    CHECK_IN_TIME,
    CHECK_OUT_TIME INTO work_check_in,
    work_check_out
FROM
    WorkTime
WHERE
    WORKTIME_ID = NEW.WORKTIME_ID;

-- 检查是否迟到
IF NEW.CHECK_IN_TIME > CONCAT(CURDATE(), ' ', work_check_in) THEN
SET
    NEW.IS_LATE = TRUE;

ELSE
SET
    NEW.IS_LATE = FALSE;

END IF;

-- 检查是否早退
IF NEW.CHECK_OUT_TIME < CONCAT(CURDATE(), ' ', work_check_out) THEN
SET
    NEW.IS_EARLY = TRUE;

ELSE
SET
    NEW.IS_EARLY = FALSE;

END IF;

-- 检查是否缺席
IF NEW.CHECK_IN_TIME IS NULL
AND NEW.CHECK_OUT_TIME IS NULL THEN
SET
    NEW.IS_ABSENT = TRUE;

ELSE
SET
    NEW.IS_ABSENT = FALSE;

END IF;

END / / DELIMITER;